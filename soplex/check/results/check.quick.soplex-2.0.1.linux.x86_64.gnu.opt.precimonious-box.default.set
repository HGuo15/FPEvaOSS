# SoPlex version 2.0.1.0

# should lifting be used to reduce range of nonzero matrix coefficients?
# range {true, false}, default false
bool:lifting = false

# objective sense (-1 - minimize, +1 - maximize)
# range [-2147483648,2147483647], default 1
int:objsense = 1

# type of computational form (0 - auto, 1 - column representation, 2 - row representation)
# range [-2147483648,2147483647], default 0
int:representation = 0

# type of algorithm (0 - enter, 1 - leave)
# range [-2147483648,2147483647], default 1
int:algorithm = 1

# type of LU update (0 - eta update, 1 - Forrest-Tomlin update)
# range [-2147483648,2147483647], default 1
int:factor_update_type = 1

# maximum number of LU updates without fresh factorization
# range [-2147483648,2147483647], default 200
int:factor_update_max = 200

# iteration limit (-1 - no limit)
# range [-2147483648,2147483647], default -1
int:iterlimit = -1

# refinement limit (-1 - no limit)
# range [-2147483648,2147483647], default 100
int:reflimit = 100

# stalling refinement limit (-1 - no limit)
# range [-2147483648,2147483647], default -1
int:stallreflimit = -1

# display frequency
# range [-2147483648,2147483647], default 200
int:displayfreq = 200

# verbosity level (0 - error, 1 - warning, 2 - debug, 3 - normal, 4 - high, 5 - full)
# range [-2147483648,2147483647], default 3
int:verbosity = 3

# simplifier (0 - off, 1 - auto)
# range [-2147483648,2147483647], default 1
int:simplifier = 1

# scaling (0 - off, 1 - uni-equilibrium, 2 - bi-equilibrium, 3 - geometric, 4 - iterated geometric)
# range [-2147483648,2147483647], default 2
int:scaler = 2

# crash basis generated when starting from scratch (0 - none, 1 - weight, 2 - sum, 3 - vector)
# range [-2147483648,2147483647], default 0
int:starter = 0

# pricing method (0 - auto, 1 - dantzig, 2 - parmult, 3 - devex, 4 - quicksteep, 5 - steep)
# range [-2147483648,2147483647], default 0
int:pricer = 0

# method for ratio test (0 - textbook, 1 - harris, 2 - fast, 3 - boundflipping)
# range [-2147483648,2147483647], default 2
int:ratiotester = 2

# mode for synchronizing real and rational LP (0 - store only real LP, 1 - auto, 2 - manual)
# range [-2147483648,2147483647], default 0
int:syncmode = 0

# mode for reading LP files (0 - floating-point, 1 - rational)
# range [-2147483648,2147483647], default 0
int:readmode = 0

# mode for iterative refinement strategy (0 - floating-point solve, 1 - auto, 2 - force iterative refinement)
# range [-2147483648,2147483647], default 1
int:solvemode = 1

# mode for a posteriori feasibility checks (0 - floating-point check, 1 - auto, 2 - rational check)
# range [-2147483648,2147483647], default 1
int:checkmode = 1

# type of timer (1 - cputime, aka. usertime, 2 - wallclock time, 0 - no timing)
# range [-2147483648,2147483647], default 1
int:timer = 1

# mode for hyper sparse pricing (0 - off, 1 - auto, 2 - always)
# range [-2147483648,2147483647], default 1
int:hyperpricing = 1

# primal feasibility tolerance
# range [0,1], default 1e-06
real:feastol = 1e-06

# dual feasibility tolerance
# range [0,1], default 1e-06
real:opttol = 1e-06

# general zero tolerance
# range [0,1], default 1e-16
real:epsilon_zero = 1e-16

# zero tolerance used in factorization
# range [0,1], default 1e-20
real:epsilon_factorization = 1e-20

# zero tolerance used in update of the factorization
# range [0,1], default 1e-16
real:epsilon_update = 1e-16

# pivot zero tolerance used in factorization
# range [0,1], default 1e-10
real:epsilon_pivot = 1e-10

# infinity threshold
# range [1e+10,1e+100], default 1e+100
real:infty = 1e+100

# time limit in seconds
# range [0,1e+100], default 1e+100
real:timelimit = 3600

# lower limit on objective value
# range [-1e+100,1e+100], default -1e+100
real:objlimit_lower = -1e+100

# upper limit on objective value
# range [-1e+100,1e+100], default 1e+100
real:objlimit_upper = 1e+100

# working tolerance for feasibility in floating-point solver during iterative refinement
# range [1e-12,1], default 1e-06
real:fpfeastol = 1e-06

# working tolerance for optimality in floating-point solver during iterative refinement
# range [1e-12,1], default 1e-06
real:fpopttol = 1e-06

# maximum increase of scaling factors between refinements
# range [1,1e+100], default 1e+12
real:maxscaleincr = 1e+12

# lower threshold in lifting (nonzero matrix coefficients with smaller absolute value will be reformulated)
# range [0,0.1], default 0.000976562
real:liftminval = 0.000976562

# lower threshold in lifting (nonzero matrix coefficients with smaller absolute value will be reformulated)
# range [10,1e+100], default 1024
real:liftmaxval = 1024

# sparse pricing threshold (#violations < dimension * SPARSITY_THRESHOLD activates sparse pricing)
# range [0,1], default 0.6
real:sparsity_threshold = 0.6
